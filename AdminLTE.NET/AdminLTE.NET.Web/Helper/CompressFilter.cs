// ***********************************************************************
// Assembly         : AdminLTE.NET.Web
// Author           : Diomedes Dominguez
// Created          : 2019-08-23
//
// Last Modified By : Diomedes Dominguez
// Last Modified On : 2019-08-23
// ***********************************************************************
// <copyright file="CompressFilter.cs" company="DNMOFT">
//     Copyright ©  2019
// </copyright>
// <summary></summary>
// ***********************************************************************
namespace AdminLTE.NET.Web.Helper
{
    using System.IO.Compression;
    using System.Web;
    using System.Web.Mvc;

    /// <summary>
    /// Class CompressFilter.
    /// Implements the <see cref="System.Web.Mvc.ActionFilterAttribute" />
    /// </summary>
    /// <seealso cref="System.Web.Mvc.ActionFilterAttribute" />
    public class CompressFilter : ActionFilterAttribute
    {
        #region Methods

        /// <summary>
        /// Sets up the current page or handler to use GZip through a Response.Filter
        /// IMPORTANT:
        /// You have to call this method before any output is generated!
        /// </summary>
        public static void GZipEncodePage()
        {
            var response = HttpContext.Current.Response;

            if (IsGZipSupported())
            {
                var acceptEncoding = HttpContext.Current.Request.Headers["Accept-Encoding"];

                response.Filter = new GZipStream(response.Filter, CompressionMode.Compress);
                response.Headers.Remove("Content-Encoding");
                response.AppendHeader("Content-Encoding", acceptEncoding.Contains("gzip") ? "gzip" : "deflate");
            }

            // Allow proxy servers to cache encoded and unencoded versions separately
            response.AppendHeader("Vary", "Content-Encoding");
        }

        /// <summary>
        /// Determines if GZip is supported
        /// </summary>
        /// <returns><c>true</c> if [is g zip supported]; otherwise, <c>false</c>.</returns>
        public static bool IsGZipSupported()
        {
            var acceptEncoding = HttpContext.Current.Request.Headers["Accept-Encoding"];
            return !string.IsNullOrEmpty(acceptEncoding) &&
                   (acceptEncoding.Contains("gzip") || acceptEncoding.Contains("deflate"));
        }

        /// <summary>
        /// Override to compress the content that is generated by
        /// an action method.
        /// </summary>
        /// <param name="filterContext">The filter context.</param>
        public override void OnActionExecuting(ActionExecutingContext filterContext)
        {
            GZipEncodePage();
        }

        #endregion Methods
    }
}